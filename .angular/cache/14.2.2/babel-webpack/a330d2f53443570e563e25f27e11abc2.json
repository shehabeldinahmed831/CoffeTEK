{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\n\nfunction SignupComponent_small_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 18);\n    i0.ɵɵtext(1, \"username is Required\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction SignupComponent_small_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 18);\n    i0.ɵɵtext(1, \"Email is Required\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction SignupComponent_small_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 18);\n    i0.ɵɵtext(1, \"password is Required\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction SignupComponent_div_19_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Confirm Password is required\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction SignupComponent_div_19_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Passwords must match\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction SignupComponent_div_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 19);\n    i0.ɵɵtemplate(1, SignupComponent_div_19_div_1_Template, 2, 0, \"div\", 20);\n    i0.ɵɵtemplate(2, SignupComponent_div_19_div_2_Template, 2, 0, \"div\", 20);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.f.confirmPassword.errors.required);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.f.confirmPassword.errors.mustMatch);\n  }\n}\n\nconst _c0 = function (a0) {\n  return {\n    \"is-invalid\": a0\n  };\n};\n\nexport class SignupComponent {\n  constructor(http, router) {\n    this.http = http;\n    this.router = router;\n  } // username:any=\"\";\n\n\n  ngOnInit() {\n    this.xform = new FormGroup({\n      'username': new FormControl('', Validators.required),\n      'email': new FormControl('', [Validators.required, Validators.email]),\n      'password': new FormControl('', [Validators.required, Validators.minLength(8), Validators.maxLength(32)]),\n      'confirmPassword': new FormControl('', [Validators.required])\n    }, {\n      asyncValidators: this.MustMatch.MustMatch('password', 'confirmPassword')\n    });\n  }\n\n  clickbtn() {\n    // console.log(this.xform);\n    let body = {\n      userName: this.username.value,\n      password: this.password.value,\n      email: this.email.value\n    };\n    console.log(this.xform.value);\n    this.http.post(\"https://bm-coffee-shop-api.herokuapp.com/api/v1/user/signup\", body).subscribe(res => {\n      // localStorage.setItem(\"username\",res.userName);\n      this.router.navigate([\"/login\"]);\n      this.xform.reset();\n    });\n  }\n\n  get username() {\n    return this.xform.get('username');\n  }\n\n  get email() {\n    return this.xform.get('email');\n  }\n\n  get password() {\n    return this.xform.get('password');\n  }\n\n  get f() {\n    return this.xform.controls;\n  }\n\n  MustMatch(controlName, matchingControlName) {\n    return formGroup => {\n      const control = formGroup.controls[controlName];\n      const matchingControl = formGroup.controls[matchingControlName];\n\n      if (matchingControl.errors && !matchingControl.errors['mustMatch']) {\n        return;\n      }\n\n      if (control.value !== matchingControl.value) {\n        matchingControl.setErrors({\n          mustMatch: true\n        });\n      } else {\n        matchingControl.setErrors(null);\n      }\n    };\n  }\n\n}\n\nSignupComponent.ɵfac = function SignupComponent_Factory(t) {\n  return new (t || SignupComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(i2.Router));\n};\n\nSignupComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: SignupComponent,\n  selectors: [[\"app-signup\"]],\n  decls: 26,\n  vars: 8,\n  consts: [[1, \"all\"], [1, \"signup-section\", \"section-padding\", \"pad\"], [1, \"box\"], [1, \"row\", \"justify-content-center\", \"custom\"], [1, \"col-md-7\", \"col-lg-6\", \"col-xl-5\"], [1, \"signup-form\"], [1, \"form-title\", \"text-center\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"formControlName\", \"username\", \"type\", \"text\", \"placeholder\", \"UserName\", 1, \"form-control-lg\", \"extend\", \"d-block\", \"my-4\"], [\"class\", \"text-danger\", 4, \"ngIf\"], [\"formControlName\", \"email\", \"type\", \"text\", \"placeholder\", \"Email\", 1, \"form-control-lg\", \"my-2\", \"extend\", \"d-block\"], [\"formControlName\", \"password\", \"type\", \"password\", \"placeholder\", \"password\", 1, \"form-control-lg\", \"d-block\", \"extend\", \"my-2\"], [\"type\", \"password\", \"formControlName\", \"confirmPassword\", 1, \"form-control\", 3, \"ngClass\"], [\"class\", \"invalid-feedback\", 4, \"ngIf\"], [1, \"btnbg\", \"form-control-lg\", \"extend\", \"py-2\"], [1, \"text-center\", \"mt-4\", \"mb-0\"], [\"routerLink\", \"/login\", 1, \"form-control-lg\", \"extend\", \"btnbg\", \"mx-4\", \"py-2\"], [1, \"text-danger\"], [1, \"invalid-feedback\"], [4, \"ngIf\"]],\n  template: function SignupComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"section\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 4)(5, \"div\", 5)(6, \"h2\", 6);\n      i0.ɵɵtext(7, \"Create Your Account\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"form\", 7);\n      i0.ɵɵlistener(\"ngSubmit\", function SignupComponent_Template_form_ngSubmit_8_listener() {\n        return ctx.clickbtn();\n      });\n      i0.ɵɵelementStart(9, \"div\", 8);\n      i0.ɵɵelement(10, \"input\", 9);\n      i0.ɵɵtemplate(11, SignupComponent_small_11_Template, 2, 0, \"small\", 10);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"div\", 8);\n      i0.ɵɵelement(13, \"input\", 11);\n      i0.ɵɵtemplate(14, SignupComponent_small_14_Template, 2, 0, \"small\", 10);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"div\", 8);\n      i0.ɵɵelement(16, \"input\", 12);\n      i0.ɵɵtemplate(17, SignupComponent_small_17_Template, 2, 0, \"small\", 10);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(18, \"input\", 13);\n      i0.ɵɵtemplate(19, SignupComponent_div_19_Template, 3, 2, \"div\", 14);\n      i0.ɵɵelementStart(20, \"button\", 15);\n      i0.ɵɵtext(21, \"Submit\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(22, \"p\", 16);\n      i0.ɵɵtext(23, \" Already have an account ? \");\n      i0.ɵɵelementStart(24, \"a\", 17);\n      i0.ɵɵtext(25, \"LogIn\");\n      i0.ɵɵelementEnd()()()()()()()()();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(8);\n      i0.ɵɵproperty(\"formGroup\", ctx.xform);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ctx.username.touched && ctx.username.hasError(\"required\"));\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ctx.email.hasError(\"required\") && ctx.email.touched);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ctx.password.value == \"\" && ctx.password.touched);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(6, _c0, ctx.submitted && ctx.f.confirmPassword.errors));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.f.confirmPassword.errors);\n    }\n  },\n  dependencies: [i3.NgClass, i3.NgIf, i2.RouterLinkWithHref, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.FormGroupDirective, i4.FormControlName],\n  styles: [\".form-control.ng-touched.ng-invalid[_ngcontent-%COMP%]{\\r\\n  border: 1px solid red;\\r\\n}\\r\\n\\r\\n.form-control.ng-touched.ng-valid[_ngcontent-%COMP%]{\\r\\n  border: 1px solid green;\\r\\n}\\r\\n\\r\\n.btnbg[_ngcontent-%COMP%]{\\r\\n  background-color: burlywood;\\r\\n  border-radius: 10px;\\r\\n  padding: 15px 22px 12px 20px;\\r\\n  text-decoration: none;\\r\\n  color: black;\\r\\n  font-weight: 700;\\r\\n  padding: 20px 30px 20px 30px;\\r\\n}\\r\\n\\r\\n.all[_ngcontent-%COMP%]{\\r\\n  height: 100vh;\\r\\n  background-image: url('go.jpg');\\r\\n  background-size: 100% 100%;\\r\\n  background-repeat:no-repeat ;\\r\\n  color: white;\\r\\n\\r\\n\\r\\n}\\r\\n\\r\\n.pad[_ngcontent-%COMP%]{\\r\\n  padding-top: 150px;\\r\\n}\\r\\n\\r\\n.box[_ngcontent-%COMP%]{\\r\\n  \\r\\n  -webkit-backdrop-filter: blur(12px) ;\\r\\n          backdrop-filter: blur(12px) ;\\r\\n  --webkit-backdrop-filter: blur(12px);\\r\\n  \\r\\n  width: 50%;\\r\\n  margin: auto;\\r\\n  \\r\\n  border-radius: 50px;\\r\\n}\\r\\n\\r\\n.custom[_ngcontent-%COMP%]{\\r\\n\\r\\n  height: 500px;\\r\\n  padding-top: 50px;\\r\\n\\r\\n\\r\\n}\\r\\n\\r\\n.extend[_ngcontent-%COMP%]{\\r\\n  width: 350px;\\r\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNpZ251cC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UscUJBQXFCO0FBQ3ZCOztBQUVBO0VBQ0UsdUJBQXVCO0FBQ3pCOztBQUNBO0VBQ0UsMkJBQTJCO0VBQzNCLG1CQUFtQjtFQUNuQiw0QkFBNEI7RUFDNUIscUJBQXFCO0VBQ3JCLFlBQVk7RUFDWixnQkFBZ0I7RUFDaEIsNEJBQTRCO0FBQzlCOztBQUNBO0VBQ0UsYUFBYTtFQUNiLCtCQUF1RDtFQUN2RCwwQkFBMEI7RUFDMUIsNEJBQTRCO0VBQzVCLFlBQVk7OztBQUdkOztBQUNBO0VBQ0Usa0JBQWtCO0FBQ3BCOztBQUNBO0VBQ0UsaUNBQWlDO0VBQ2pDLG9DQUE0QjtVQUE1Qiw0QkFBNEI7RUFDNUIsb0NBQW9DO0VBQ3BDLHVCQUF1QjtFQUN2QixVQUFVO0VBQ1YsWUFBWTtFQUNaLG1CQUFtQjtFQUNuQixtQkFBbUI7QUFDckI7O0FBQ0E7O0VBRUUsYUFBYTtFQUNiLGlCQUFpQjs7O0FBR25COztBQUNBO0VBQ0UsWUFBWTtBQUNkIiwiZmlsZSI6InNpZ251cC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmZvcm0tY29udHJvbC5uZy10b3VjaGVkLm5nLWludmFsaWR7XHJcbiAgYm9yZGVyOiAxcHggc29saWQgcmVkO1xyXG59XHJcblxyXG4uZm9ybS1jb250cm9sLm5nLXRvdWNoZWQubmctdmFsaWR7XHJcbiAgYm9yZGVyOiAxcHggc29saWQgZ3JlZW47XHJcbn1cclxuLmJ0bmJne1xyXG4gIGJhY2tncm91bmQtY29sb3I6IGJ1cmx5d29vZDtcclxuICBib3JkZXItcmFkaXVzOiAxMHB4O1xyXG4gIHBhZGRpbmc6IDE1cHggMjJweCAxMnB4IDIwcHg7XHJcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xyXG4gIGNvbG9yOiBibGFjaztcclxuICBmb250LXdlaWdodDogNzAwO1xyXG4gIHBhZGRpbmc6IDIwcHggMzBweCAyMHB4IDMwcHg7XHJcbn1cclxuLmFsbHtcclxuICBoZWlnaHQ6IDEwMHZoO1xyXG4gIGJhY2tncm91bmQtaW1hZ2U6IHVybChcIi4uLy4uLy4uL2Fzc2V0cy9pbWFnZXMvZ28uanBnIFwiKTtcclxuICBiYWNrZ3JvdW5kLXNpemU6IDEwMCUgMTAwJTtcclxuICBiYWNrZ3JvdW5kLXJlcGVhdDpuby1yZXBlYXQgO1xyXG4gIGNvbG9yOiB3aGl0ZTtcclxuXHJcblxyXG59XHJcbi5wYWR7XHJcbiAgcGFkZGluZy10b3A6IDE1MHB4O1xyXG59XHJcbi5ib3h7XHJcbiAgLyogYmFja2dyb3VuZC1jb2xvcjogYnVybHl3b29kOyAqL1xyXG4gIGJhY2tkcm9wLWZpbHRlcjogYmx1cigxMnB4KSA7XHJcbiAgLS13ZWJraXQtYmFja2Ryb3AtZmlsdGVyOiBibHVyKDEycHgpO1xyXG4gIC8qIG1hcmdpbi10b3A6IDMwMHB4OyAqL1xyXG4gIHdpZHRoOiA1MCU7XHJcbiAgbWFyZ2luOiBhdXRvO1xyXG4gIC8qIGhlaWdodDogNjAwcHg7ICovXHJcbiAgYm9yZGVyLXJhZGl1czogNTBweDtcclxufVxyXG4uY3VzdG9te1xyXG5cclxuICBoZWlnaHQ6IDUwMHB4O1xyXG4gIHBhZGRpbmctdG9wOiA1MHB4O1xyXG5cclxuXHJcbn1cclxuLmV4dGVuZHtcclxuICB3aWR0aDogMzUwcHg7XHJcbn1cclxuIl19 */\"]\n});","map":{"version":3,"mappings":"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","names":["FormControl","FormGroup","Validators","i0","SignupComponent","constructor","http","router","ngOnInit","xform","required","email","minLength","maxLength","asyncValidators","MustMatch","clickbtn","body","userName","username","value","password","console","log","post","subscribe","res","navigate","reset","get","f","controls","controlName","matchingControlName","formGroup","control","matchingControl","errors","setErrors","mustMatch","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["D:\\WebDev\\dfproject\\gp\\src\\app\\components\\signup\\signup.component.ts","D:\\WebDev\\dfproject\\gp\\src\\app\\components\\signup\\signup.component.html"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})\nexport class SignupComponent implements OnInit {\n\n  xform!: FormGroup;\n\n  constructor(private http:HttpClient,private router:Router) { }\n  // username:any=\"\";\n  ngOnInit(): void {\n    this.xform = new FormGroup({\n      'username' : new FormControl('', Validators.required),\n      'email': new FormControl ('',  [Validators.required , Validators.email]),\n      'password': new FormControl ('' , [Validators.required,Validators.minLength(8),Validators.maxLength(32)]),\n      'confirmPassword': new FormControl ('' , [Validators.required])\n    }\n    ,\n    {\n      asyncValidators: this.MustMatch.MustMatch('password', 'confirmPassword')\n      }\n    )\n\n  }\n\n\n  clickbtn(){\n    // console.log(this.xform);\n\n    let body={\n      userName:this.username.value,\n      password:this.password.value,\n      email:this.email.value\n    };\n    console.log(this.xform.value);\n\n    this.http.post(\"https://bm-coffee-shop-api.herokuapp.com/api/v1/user/signup\",body).subscribe((res:any)=>{\n    // localStorage.setItem(\"username\",res.userName);\n    this.router.navigate([\"/login\"]);\n    this.xform.reset();\n    })\n  }\n\n\n  get username(){\n    return this.xform.get('username') as FormControl;\n  }\n\n  get email(){\n    return this.xform.get('email') as FormControl;\n  }\n\n  get password(){\n    return this.xform.get('password') as FormControl;\n  }\n\n\n\n\n\n\n  get f() { return this.xform.controls; }\n  MustMatch(controlName: string, matchingControlName: string) {\n  return (formGroup: FormGroup) => {\n  const control = formGroup.controls[controlName];\n  const matchingControl = formGroup.controls[matchingControlName];\n  if (matchingControl.errors && !matchingControl.errors['mustMatch']) {\n  return;\n  }\n  if (control.value !== matchingControl.value) {\n  matchingControl.setErrors({ mustMatch: true });\n  } else {\n  matchingControl.setErrors(null);\n  }\n  }\n  }\n}\n","<div class=\"all\">\n  <section class=\"signup-section section-padding pad\">\n    <div class=\"box\">\n      <div class=\"row justify-content-center custom\">\n        <div class=\"col-md-7 col-lg-6 col-xl-5\">\n          <div class=\"signup-form\">\n            <h2 class=\"form-title text-center\">Create Your Account</h2>\n\n            <form [formGroup]=\"xform\" (ngSubmit)=\"clickbtn()\">\n              <div class=\"form-group\">\n                <input\n                  formControlName=\"username\"\n                  type=\"text\"\n                  class=\"form-control-lg extend d-block my-4\"\n                  placeholder=\"UserName\"\n                />\n                <small\n                  *ngIf=\"username.touched && username.hasError('required')\"\n                  class=\"text-danger\"\n                  >username is Required</small\n                >\n              </div>\n\n              <div class=\"form-group\">\n                <input\n                  formControlName=\"email\"\n                  type=\"text\"\n                  class=\"form-control-lg my-2 extend d-block\"\n                  placeholder=\"Email\"\n                />\n                <small\n                  *ngIf=\"email.hasError('required') && email.touched\"\n                  class=\"text-danger\"\n                  >Email is Required</small\n                >\n              </div>\n\n              <div class=\"form-group\">\n                <input\n                  formControlName=\"password\"\n                  type=\"password\"\n                  class=\"form-control-lg d-block extend my-2\"\n                  placeholder=\"password\"\n                />\n                <small\n                  *ngIf=\"password.value == '' && password.touched\"\n                  class=\"text-danger\"\n                  >password is Required</small\n                >\n              </div>\n               <input type=\"password\" formControlName=\"confirmPassword\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.confirmPassword.errors }\" />\n      <div *ngIf=\"submitted && f.confirmPassword.errors\" class=\"invalid-feedback\">\n         <div *ngIf=\"f.confirmPassword.errors.required\">Confirm Password is required</div>\n         <div *ngIf=\"f.confirmPassword.errors.mustMatch\">Passwords must match</div>\n      </div>\n              <!-- [disabled]=\"xform.invalid\"\n              (click)=\"clickbtn()\"\n            #password-->\n              <button class=\"btnbg form-control-lg extend py-2\">Submit</button>\n\n              <p class=\"text-center mt-4 mb-0\">\n                Already have an account ?\n                <a\n                  routerLink=\"/login\"\n                  class=\"form-control-lg extend btnbg mx-4 py-2\"\n                  >LogIn</a\n                >\n              </p>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  </section>\n</div>\n"]},"metadata":{},"sourceType":"module"}